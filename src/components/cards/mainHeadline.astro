---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import Divider from "@/components/bases/divider.astro";
import { categoriesHandler } from "@/lib/handlers/categories";
import { getDateDistance, normalizeDate } from "@/lib/utils/date";
import { articlePermalink } from "@/lib/utils/permalinks";

type Props = {
  article: CollectionEntry<"articles">;
};

const { article } = Astro.props;

const { remarkPluginFrontmatter } = await render(article);

const category = categoriesHandler.oneCategory(article.data.category.id);
---

<article class="group relative isolate flex flex-col-reverse md:flex-col gap-4">
  <div class="aspect-video overflow-hidden rounded-md">
    {
      article.data.cover ? (
        <Image
          src={article.data.cover}
          alt={
            article.data.covert_alt
              ? article.data.covert_alt
              : article.data.title
          }
          layout="constrained"
          loading="eager"
          fetchpriority="high"
        />
      ) : article.data.coverUrl ? (
        <img
          src={article.data.coverUrl}
          alt={
            article.data.covert_alt
              ? article.data.covert_alt
              : article.data.title
          }
          loading="eager"
          decoding="async"
          fetchpriority="high"
          class="w-full h-full object-cover"
        />
      ) : null
    }
  </div>
  <div class="flex flex-col gap-2">
    <div>
      <h1
        class="text-xl font-semibold lg:group-hover:underline underline-offset-2"
      >
        <a href={articlePermalink(article)}>
          <span class="absolute inset-0 z-10 pointer-events-none"></span>
          {article.data.title}
        </a>
      </h1>
      <p class="text-base-content/90 text-base max-w-lg">
        {article.data.description}
      </p>
    </div>
    <div class="flex items-center text-xs text-base-content/80 mt-2">
      <span class="text-primary dark:text-secondary">{category.data.title}</span
      >
      <Divider />
      <span
        >{
          getDateDistance(
            remarkPluginFrontmatter.lastModified ||
              normalizeDate(article.data.publishedTime)
          )
        }</span
      >
    </div>
  </div>
</article>
